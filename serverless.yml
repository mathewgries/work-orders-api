service: work-orders-api

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  stage: ${opt:stage, self:provider.stage}
  workordersOrdersTable: ${self:custom.stage}-workordersOrders
  workordersClientsTable: ${self:custom.stage}-workorderClients
  workordersItemsTable: ${self:custom.stage}-workorderItems
  workordersContactsTable: ${self:custom.stage}-workorderContacts 
  tableThroughputs:
    prod: 5
    default: 1
  tableThroughput: ${self:custom.tableThroughputs.${self:custom.stage}, self:custom.tableThroughputs.default}
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1

  # 'iamRoleStatement' defines the permission policy for the Lambda function.
  # In this case Lambda functions are granted with permissions to access DynamoDB.
  environment:
    workordersOrdersTable: ${self:custom.workordersOrdersTable}
    workordersClientsTable: ${self:custom.workordersClientsTable}
    workordersItemsTable: ${self:custom.workordersItemsTable}
    workordersContactsTable: ${self:custom.workordersContactsTable} 

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      # Restrict our IAM role permissions to
      # the specific table for the stage
      Resource:
        - "Fn::GetAtt": [ WorkordersOrdersTable, Arn ]
        - "Fn::GetAtt": [ WorkordersClientsTable, Arn]
        - "Fn::GetAtt": [ WorkordersItemsTable, Arn]
        - "Fn::GetAtt": [ WorkordersContactsTable, Arn]

functions:
  - ${file(functions/workorders/functions.yml)}
  
resources:
  # API Gateway Errors
  - ${file(resources/api/api-gateway-errors.yml)}
  # dynamodb tables
  - ${file(resources/tables/workorders-table.yml)}
  - ${file(resources/tables/clients-table.yml)}
  - ${file(resources/tables/workorders-items-table.yml)}
  - ${file(resources/tables/contacts-table.yml)}
  # S3
  - ${file(resources/buckets/s3-bucket.yml)}
  # Cognito
  - ${file(resources/cognito/cognito-user-pool.yml)}
  - ${file(resources/cognito/cognito-identity-pool.yml)}